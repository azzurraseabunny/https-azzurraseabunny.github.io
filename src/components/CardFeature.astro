---
 // components/CardFeature.astro
---

<div class="flip-container hidden" id="flipContainer">
  <div class="flip-card" id="flipCard">
    <div class="side front">
      Hard Skills<br>
      Expert :<br><br>
      2D Animation<br>
      Storyboard &<br>
      Compositing<br>
      Character Design<br>
      Concept Art<br>
      Sound Design<br>
      Character Animation<br>
      Art<br>
      Music Composition<br>
      Proficient :<br><br>
      Graphic Design<br>
      Motion Graphics<br>
      Music Production<br>
      3D Modelling<br>
      Novice :<br><br>
      Game Programming
    </div>
    <div class="side back">
      Soft Skills<br><br>
      Strong work ethic<br>
      Communication<br>
      Adaptability<br>
      Emotional Intelligence<br>
      Creativity<br>
      Ability to work under pressure<br>
      Conflict Resolution<br>
      Problem Solving<br>
      Responsibility<br>
      Self-Motivation<br>
      Leadership<br>
      Determined<br>
    </div>
  </div>
</div>

<button id="fadeButton">THIS IS STILL A WIP!! click for skills</button>

<script>
  const flipCard = document.getElementById('flipCard');
  const flipContainer = document.getElementById('flipContainer');
  const fadeButton = document.getElementById('fadeButton');

  let isDragging = false;
  let isClick = false;
  let startX, startY, initialX, initialY;

  flipContainer.addEventListener('mousedown', (event) => {
    isDragging = true;
    isClick = true;
    startX = event.clientX;
    startY = event.clientY;

    const rect = flipContainer.getBoundingClientRect();
    initialX = rect.left;
    initialY = rect.top;
    flipContainer.style.cursor = 'grabbing';
  });

  document.addEventListener('mousemove', (event) => {
    if (!isDragging) return;

    const deltaX = event.clientX - startX;
    const deltaY = event.clientY - startY;

    if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {
      isClick = false;
    }

    flipContainer.style.left = `${Math.min(Math.max(initialX + deltaX, 0), window.innerWidth - flipContainer.offsetWidth)}px`;
    flipContainer.style.top = `${Math.min(Math.max(initialY + deltaY, 0), window.innerHeight - flipContainer.offsetHeight)}px`;
    flipContainer.style.transform = 'translate(0, 0)';
  });

  document.addEventListener('mouseup', () => {
    if (isDragging) {
      isDragging = false;
      flipContainer.style.cursor = 'grab';
    }
  });

  flipContainer.addEventListener('click', () => {
    if (isClick) {
      flipCard.classList.toggle('flip');
    }
  });

  fadeButton.addEventListener('click', () => {
    flipContainer.classList.toggle('hidden');
  });
</script>

<style>
  /* Load the custom font */
  @font-face {
    font-family: 'Atkinson Bold';
    src: url('/atkinson-bold.woff') format('woff');
  }

  .flip-container {
    perspective: 1000px;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: opacity 1s ease;
    z-index: 1000;
  }

  .flip-card {
    position: relative;
    width: 300px;  /* Reduced width */
    height: 400px; /* Increased height to make the card taller */
    transform-style: preserve-3d;
    transition: transform 0.6s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: grab;
    box-sizing: border-box;
  }

  .flip-card:active {
    cursor: grabbing;
  }

  .flip-card.flip {
    transform: rotateY(180deg);
  }

  .side {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    justify-content: flex-start;  /* Changed from center to flex-start */
    align-items: flex-start; /* Changed from center to flex-start */
    padding: 5px; /* Reduced padding for more compact layout */
    font-size: 1vw; /* Further reduced font size for smaller text */
    line-height: 1.2; /* Reduced line height for tighter spacing */
    text-align: justify; /* Justify text alignment */
    color: black;
    border-radius: 10px;
    user-select: none;
    overflow: hidden;
    font-family: 'Atkinson Bold', sans-serif;  /* Apply the custom font */
  }

  .front {
    background-image: url('/cardfront.png');  /* Set the image as the background */
    background-size: cover;  /* Make sure the image covers the entire card */
    background-position: center;  /* Center the image */
    transform: translateZ(0);
  }

  .back {
    background-image: url('/cardback.png');  /* Set the image as the background */
    background-size: cover;  /* Make sure the image covers the entire card */
    background-position: center;  /* Center the image */
    transform: rotateY(180deg) translateZ(0);
  }

  .hidden {
    opacity: 0;
    pointer-events: none;
  }
</style>
